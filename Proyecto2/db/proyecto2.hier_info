|proyecto2
Mclk => Mclk.IN4
nReset => nReset.IN3
Data_Available => Data_Available.IN1
BUS_IN[0] => BUS_IN[0].IN1
BUS_IN[1] => BUS_IN[1].IN1
BUS_IN[2] => BUS_IN[2].IN1
BUS_IN[3] => BUS_IN[3].IN1
BUS_IN[4] => BUS_IN[4].IN1
BUS_IN[5] => BUS_IN[5].IN1
BUS_IN[6] => BUS_IN[6].IN1
BUS_IN[7] => BUS_IN[7].IN1
Read_RQ => ~NO_FANOUT~
BUS_OUT[0] << <GND>
BUS_OUT[1] << <GND>
BUS_OUT[2] << <GND>
BUS_OUT[3] << <GND>
BUS_OUT[4] << <GND>
BUS_OUT[5] << <GND>
BUS_OUT[6] << <GND>
BUS_OUT[7] << <GND>
BUS_OUT[8] << <GND>
BUS_OUT[9] << <GND>
BUS_OUT[10] << <GND>
BUS_OUT[11] << <GND>
BUS_OUT[12] << <GND>
BUS_OUT[13] << <GND>
BUS_OUT[14] << <GND>
BUS_OUT[15] << <GND>
BUS_OUT[16] << <GND>
BUS_OUT[17] << <GND>
BUS_OUT[18] << <GND>
BUS_OUT[19] << <GND>
BUS_OUT[20] << <GND>
BUS_OUT[21] << <GND>
BUS_OUT[22] << <GND>
BUS_OUT[23] << <GND>
BUS_OUT[24] << <GND>
BUS_OUT[25] << <GND>
BUS_OUT[26] << <GND>
BUS_OUT[27] << <GND>
BUS_OUT[28] << <GND>
BUS_OUT[29] << <GND>
BUS_OUT[30] << <GND>
BUS_OUT[31] << <GND>
BUS_OUT[32] << <GND>
BUS_OUT[33] << <GND>
BUS_OUT[34] << <GND>
BUS_OUT[35] << <GND>
BUS_OUT[36] << <GND>
BUS_OUT[37] << <GND>
BUS_OUT[38] << <GND>
BUS_OUT[39] << <GND>
BUS_OUT[40] << <GND>
BUS_OUT[41] << <GND>
BUS_OUT[42] << <GND>
BUS_OUT[43] << <GND>
BUS_OUT[44] << <GND>
BUS_OUT[45] << <GND>
BUS_OUT[46] << <GND>
BUS_OUT[47] << <GND>
BUS_OUT[48] << <GND>
BUS_OUT[49] << <GND>
BUS_OUT[50] << <GND>
BUS_OUT[51] << <GND>
BUS_OUT[52] << <GND>
BUS_OUT[53] << <GND>
BUS_OUT[54] << <GND>
BUS_OUT[55] << <GND>
BUS_OUT[56] << <GND>
BUS_OUT[57] << <GND>
BUS_OUT[58] << <GND>
BUS_OUT[59] << <GND>
BUS_OUT[60] << <GND>
BUS_OUT[61] << <GND>
BUS_OUT[62] << <GND>
BUS_OUT[63] << <GND>
BUS_OUT[64] << <GND>
BUS_OUT[65] << <GND>
BUS_OUT[66] << <GND>
BUS_OUT[67] << <GND>
BUS_OUT[68] << <GND>
BUS_OUT[69] << <GND>
BUS_OUT[70] << <GND>
BUS_OUT[71] << <GND>
BUS_OUT[72] << <GND>
BUS_OUT[73] << <GND>
BUS_OUT[74] << <GND>
BUS_OUT[75] << <GND>
BUS_OUT[76] << <GND>
BUS_OUT[77] << <GND>
BUS_OUT[78] << <GND>
BUS_OUT[79] << <GND>
BUS_OUT[80] << <GND>
BUS_OUT[81] << <GND>
BUS_OUT[82] << <GND>
BUS_OUT[83] << <GND>
BUS_OUT[84] << <GND>
BUS_OUT[85] << <GND>
BUS_OUT[86] << <GND>
BUS_OUT[87] << <GND>
BUS_OUT[88] << <GND>
BUS_OUT[89] << <GND>
BUS_OUT[90] << <GND>
BUS_OUT[91] << <GND>
BUS_OUT[92] << <GND>
BUS_OUT[93] << <GND>
BUS_OUT[94] << <GND>
BUS_OUT[95] << <GND>
BUS_OUT[96] << <GND>
BUS_OUT[97] << <GND>
BUS_OUT[98] << <GND>
BUS_OUT[99] << <GND>
BUS_OUT[100] << <GND>
BUS_OUT[101] << <GND>
BUS_OUT[102] << <GND>
BUS_OUT[103] << <GND>
BUS_OUT[104] << <GND>
BUS_OUT[105] << <GND>
BUS_OUT[106] << <GND>
BUS_OUT[107] << <GND>
BUS_OUT[108] << <GND>
BUS_OUT[109] << <GND>
BUS_OUT[110] << <GND>
BUS_OUT[111] << <GND>
BUS_OUT[112] << <GND>
BUS_OUT[113] << <GND>
BUS_OUT[114] << <GND>
BUS_OUT[115] << <GND>
BUS_OUT[116] << <GND>
BUS_OUT[117] << <GND>
BUS_OUT[118] << <GND>
BUS_OUT[119] << <GND>
BUS_OUT[120] << <GND>
SPI_clk << <GND>
SPI_CS << <GND>
SPI_MOSI << shift_register:U3.data_out
SPI_MISO => ~NO_FANOUT~
Address[0] => Address[0].IN1
Address[1] => Address[1].IN1
Address[2] => Address[2].IN1
Address[3] => Address[3].IN1
Address[4] => Address[4].IN1
Address[5] => Address[5].IN1
Address[6] => Address[6].IN1
Address[7] => Address[7].IN1
rst_clk => rst_clk.IN1


|proyecto2|pre_tx_module:U0
Mclk => old_data.CLK
Mclk => fifo_wrreq~reg0.CLK
Data_Available => always0.IN1
Data_Available => old_data.DATAIN
fifo_wrreq <= fifo_wrreq~reg0.DB_MAX_OUTPUT_PORT_TYPE
nReset => ~NO_FANOUT~


|proyecto2|fifo:U1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
rdreq => rdreq.IN1
sclr => sclr.IN1
wrreq => wrreq.IN1
almost_full <= scfifo:scfifo_component.almost_full
empty <= scfifo:scfifo_component.empty
full <= scfifo:scfifo_component.full
q[0] <= scfifo:scfifo_component.q
q[1] <= scfifo:scfifo_component.q
q[2] <= scfifo:scfifo_component.q
q[3] <= scfifo:scfifo_component.q
q[4] <= scfifo:scfifo_component.q
q[5] <= scfifo:scfifo_component.q
q[6] <= scfifo:scfifo_component.q
q[7] <= scfifo:scfifo_component.q
usedw[0] <= scfifo:scfifo_component.usedw
usedw[1] <= scfifo:scfifo_component.usedw
usedw[2] <= scfifo:scfifo_component.usedw
usedw[3] <= scfifo:scfifo_component.usedw


|proyecto2|fifo:U1|scfifo:scfifo_component
data[0] => scfifo_k4i1:auto_generated.data[0]
data[1] => scfifo_k4i1:auto_generated.data[1]
data[2] => scfifo_k4i1:auto_generated.data[2]
data[3] => scfifo_k4i1:auto_generated.data[3]
data[4] => scfifo_k4i1:auto_generated.data[4]
data[5] => scfifo_k4i1:auto_generated.data[5]
data[6] => scfifo_k4i1:auto_generated.data[6]
data[7] => scfifo_k4i1:auto_generated.data[7]
q[0] <= scfifo_k4i1:auto_generated.q[0]
q[1] <= scfifo_k4i1:auto_generated.q[1]
q[2] <= scfifo_k4i1:auto_generated.q[2]
q[3] <= scfifo_k4i1:auto_generated.q[3]
q[4] <= scfifo_k4i1:auto_generated.q[4]
q[5] <= scfifo_k4i1:auto_generated.q[5]
q[6] <= scfifo_k4i1:auto_generated.q[6]
q[7] <= scfifo_k4i1:auto_generated.q[7]
wrreq => scfifo_k4i1:auto_generated.wrreq
rdreq => scfifo_k4i1:auto_generated.rdreq
clock => scfifo_k4i1:auto_generated.clock
aclr => ~NO_FANOUT~
sclr => scfifo_k4i1:auto_generated.sclr
eccstatus[0] <= <UNC>
eccstatus[1] <= <UNC>
empty <= scfifo_k4i1:auto_generated.empty
full <= scfifo_k4i1:auto_generated.full
almost_full <= scfifo_k4i1:auto_generated.almost_full
almost_empty <= <GND>
usedw[0] <= scfifo_k4i1:auto_generated.usedw[0]
usedw[1] <= scfifo_k4i1:auto_generated.usedw[1]
usedw[2] <= scfifo_k4i1:auto_generated.usedw[2]
usedw[3] <= scfifo_k4i1:auto_generated.usedw[3]


|proyecto2|fifo:U1|scfifo:scfifo_component|scfifo_k4i1:auto_generated
almost_full <= dffe_af.DB_MAX_OUTPUT_PORT_TYPE
clock => a_dpfifo_smc1:dpfifo.clock
clock => dffe_af.CLK
data[0] => a_dpfifo_smc1:dpfifo.data[0]
data[1] => a_dpfifo_smc1:dpfifo.data[1]
data[2] => a_dpfifo_smc1:dpfifo.data[2]
data[3] => a_dpfifo_smc1:dpfifo.data[3]
data[4] => a_dpfifo_smc1:dpfifo.data[4]
data[5] => a_dpfifo_smc1:dpfifo.data[5]
data[6] => a_dpfifo_smc1:dpfifo.data[6]
data[7] => a_dpfifo_smc1:dpfifo.data[7]
empty <= a_dpfifo_smc1:dpfifo.empty
full <= a_dpfifo_smc1:dpfifo.full
q[0] <= a_dpfifo_smc1:dpfifo.q[0]
q[1] <= a_dpfifo_smc1:dpfifo.q[1]
q[2] <= a_dpfifo_smc1:dpfifo.q[2]
q[3] <= a_dpfifo_smc1:dpfifo.q[3]
q[4] <= a_dpfifo_smc1:dpfifo.q[4]
q[5] <= a_dpfifo_smc1:dpfifo.q[5]
q[6] <= a_dpfifo_smc1:dpfifo.q[6]
q[7] <= a_dpfifo_smc1:dpfifo.q[7]
rdreq => a_dpfifo_smc1:dpfifo.rreq
rdreq => _.IN1
rdreq => _.IN0
sclr => a_dpfifo_smc1:dpfifo.sclr
sclr => _.IN0
sclr => _.IN0
usedw[0] <= a_dpfifo_smc1:dpfifo.usedw[0]
usedw[1] <= a_dpfifo_smc1:dpfifo.usedw[1]
usedw[2] <= a_dpfifo_smc1:dpfifo.usedw[2]
usedw[3] <= a_dpfifo_smc1:dpfifo.usedw[3]
wrreq => a_dpfifo_smc1:dpfifo.wreq
wrreq => _.IN0
wrreq => _.IN1


|proyecto2|fifo:U1|scfifo:scfifo_component|scfifo_k4i1:auto_generated|a_dpfifo_smc1:dpfifo
clock => a_fefifo_66f:fifo_state.clock
clock => altsyncram_0ou1:FIFOram.clock0
clock => altsyncram_0ou1:FIFOram.clock1
clock => cntr_hgb:rd_ptr_count.clock
clock => cntr_hgb:wr_ptr.clock
data[0] => altsyncram_0ou1:FIFOram.data_a[0]
data[1] => altsyncram_0ou1:FIFOram.data_a[1]
data[2] => altsyncram_0ou1:FIFOram.data_a[2]
data[3] => altsyncram_0ou1:FIFOram.data_a[3]
data[4] => altsyncram_0ou1:FIFOram.data_a[4]
data[5] => altsyncram_0ou1:FIFOram.data_a[5]
data[6] => altsyncram_0ou1:FIFOram.data_a[6]
data[7] => altsyncram_0ou1:FIFOram.data_a[7]
empty <= a_fefifo_66f:fifo_state.empty
full <= a_fefifo_66f:fifo_state.full
q[0] <= altsyncram_0ou1:FIFOram.q_b[0]
q[1] <= altsyncram_0ou1:FIFOram.q_b[1]
q[2] <= altsyncram_0ou1:FIFOram.q_b[2]
q[3] <= altsyncram_0ou1:FIFOram.q_b[3]
q[4] <= altsyncram_0ou1:FIFOram.q_b[4]
q[5] <= altsyncram_0ou1:FIFOram.q_b[5]
q[6] <= altsyncram_0ou1:FIFOram.q_b[6]
q[7] <= altsyncram_0ou1:FIFOram.q_b[7]
rreq => a_fefifo_66f:fifo_state.rreq
rreq => valid_rreq.IN0
sclr => a_fefifo_66f:fifo_state.sclr
sclr => _.IN0
sclr => _.IN1
sclr => cntr_hgb:rd_ptr_count.sclr
sclr => cntr_hgb:wr_ptr.sclr
usedw[0] <= a_fefifo_66f:fifo_state.usedw_out[0]
usedw[1] <= a_fefifo_66f:fifo_state.usedw_out[1]
usedw[2] <= a_fefifo_66f:fifo_state.usedw_out[2]
usedw[3] <= a_fefifo_66f:fifo_state.usedw_out[3]
wreq => a_fefifo_66f:fifo_state.wreq
wreq => valid_wreq.IN0


|proyecto2|fifo:U1|scfifo:scfifo_component|scfifo_k4i1:auto_generated|a_dpfifo_smc1:dpfifo|a_fefifo_66f:fifo_state
aclr => b_full.IN0
aclr => b_non_empty.IN0
aclr => cntr_tg7:count_usedw.aclr
clock => cntr_tg7:count_usedw.clock
clock => b_full.CLK
clock => b_non_empty.CLK
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= b_full.DB_MAX_OUTPUT_PORT_TYPE
rreq => _.IN1
rreq => _.IN0
rreq => _.IN1
rreq => valid_rreq.IN0
sclr => _.IN0
sclr => _.IN0
sclr => _.IN1
sclr => _.IN0
sclr => _.IN0
sclr => cntr_tg7:count_usedw.sclr
usedw_out[0] <= usedw[0].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[1] <= usedw[1].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[2] <= usedw[2].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[3] <= usedw[3].DB_MAX_OUTPUT_PORT_TYPE
wreq => _.IN1
wreq => _.IN1
wreq => _.IN0
wreq => valid_wreq.IN0


|proyecto2|fifo:U1|scfifo:scfifo_component|scfifo_k4i1:auto_generated|a_dpfifo_smc1:dpfifo|a_fefifo_66f:fifo_state|cntr_tg7:count_usedw
aclr => counter_reg_bit[3].IN0
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN1
sclr => counter_reg_bit[3].SCLR
sclr => counter_reg_bit[2].SCLR
sclr => counter_reg_bit[1].SCLR
sclr => counter_reg_bit[0].SCLR
updown => updown_other_bits.IN1
updown => counter_comb_bita0.DATAF


|proyecto2|fifo:U1|scfifo:scfifo_component|scfifo_k4i1:auto_generated|a_dpfifo_smc1:dpfifo|altsyncram_0ou1:FIFOram
address_a[0] => lutrama0.PORTAADDR
address_a[0] => lutrama1.PORTAADDR
address_a[0] => lutrama2.PORTAADDR
address_a[0] => lutrama3.PORTAADDR
address_a[0] => lutrama4.PORTAADDR
address_a[0] => lutrama5.PORTAADDR
address_a[0] => lutrama6.PORTAADDR
address_a[0] => lutrama7.PORTAADDR
address_a[1] => lutrama0.PORTAADDR1
address_a[1] => lutrama1.PORTAADDR1
address_a[1] => lutrama2.PORTAADDR1
address_a[1] => lutrama3.PORTAADDR1
address_a[1] => lutrama4.PORTAADDR1
address_a[1] => lutrama5.PORTAADDR1
address_a[1] => lutrama6.PORTAADDR1
address_a[1] => lutrama7.PORTAADDR1
address_a[2] => lutrama0.PORTAADDR2
address_a[2] => lutrama1.PORTAADDR2
address_a[2] => lutrama2.PORTAADDR2
address_a[2] => lutrama3.PORTAADDR2
address_a[2] => lutrama4.PORTAADDR2
address_a[2] => lutrama5.PORTAADDR2
address_a[2] => lutrama6.PORTAADDR2
address_a[2] => lutrama7.PORTAADDR2
address_a[3] => lutrama0.PORTAADDR3
address_a[3] => lutrama1.PORTAADDR3
address_a[3] => lutrama2.PORTAADDR3
address_a[3] => lutrama3.PORTAADDR3
address_a[3] => lutrama4.PORTAADDR3
address_a[3] => lutrama5.PORTAADDR3
address_a[3] => lutrama6.PORTAADDR3
address_a[3] => lutrama7.PORTAADDR3
address_b[0] => rdaddr_reg[0].DATAIN
address_b[1] => rdaddr_reg[1].DATAIN
address_b[2] => rdaddr_reg[2].DATAIN
address_b[3] => rdaddr_reg[3].DATAIN
clock0 => lutrama0.CLK0
clock0 => lutrama1.CLK0
clock0 => lutrama2.CLK0
clock0 => lutrama3.CLK0
clock0 => lutrama4.CLK0
clock0 => lutrama5.CLK0
clock0 => lutrama6.CLK0
clock0 => lutrama7.CLK0
clock1 => rdaddr_reg[3].CLK
clock1 => rdaddr_reg[2].CLK
clock1 => rdaddr_reg[1].CLK
clock1 => rdaddr_reg[0].CLK
clocken1 => rdaddr_reg[3].ENA
clocken1 => rdaddr_reg[2].ENA
clocken1 => rdaddr_reg[1].ENA
clocken1 => rdaddr_reg[0].ENA
data_a[0] => lutrama0.PORTADATAIN
data_a[1] => lutrama1.PORTADATAIN
data_a[2] => lutrama2.PORTADATAIN
data_a[3] => lutrama3.PORTADATAIN
data_a[4] => lutrama4.PORTADATAIN
data_a[5] => lutrama5.PORTADATAIN
data_a[6] => lutrama6.PORTADATAIN
data_a[7] => lutrama7.PORTADATAIN
q_b[0] <= lutrama0.PORTBDATAOUT
q_b[1] <= lutrama1.PORTBDATAOUT
q_b[2] <= lutrama2.PORTBDATAOUT
q_b[3] <= lutrama3.PORTBDATAOUT
q_b[4] <= lutrama4.PORTBDATAOUT
q_b[5] <= lutrama5.PORTBDATAOUT
q_b[6] <= lutrama6.PORTBDATAOUT
q_b[7] <= lutrama7.PORTBDATAOUT
wren_a => lutrama0.ENA0
wren_a => lutrama1.ENA0
wren_a => lutrama2.ENA0
wren_a => lutrama3.ENA0
wren_a => lutrama4.ENA0
wren_a => lutrama5.ENA0
wren_a => lutrama6.ENA0
wren_a => lutrama7.ENA0


|proyecto2|fifo:U1|scfifo:scfifo_component|scfifo_k4i1:auto_generated|a_dpfifo_smc1:dpfifo|cntr_hgb:rd_ptr_count
aclr => counter_reg_bit[3].IN0
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN1
sclr => counter_reg_bit[3].SCLR
sclr => counter_reg_bit[2].SCLR
sclr => counter_reg_bit[1].SCLR
sclr => counter_reg_bit[0].SCLR


|proyecto2|fifo:U1|scfifo:scfifo_component|scfifo_k4i1:auto_generated|a_dpfifo_smc1:dpfifo|cntr_hgb:wr_ptr
aclr => counter_reg_bit[3].IN0
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN1
sclr => counter_reg_bit[3].SCLR
sclr => counter_reg_bit[2].SCLR
sclr => counter_reg_bit[1].SCLR
sclr => counter_reg_bit[0].SCLR


|proyecto2|FSM_SPI:U2
CSI_CLK => always1.IN1
CSI_CLK => Selector4.IN2
CSI_CLK => always1.IN1
clock => fstate~1.DATAIN
reset => reg_fstate.IDLE.OUTPUTSELECT
reset => reg_fstate.A.OUTPUTSELECT
reset => reg_fstate.B.OUTPUTSELECT
reset => reg_fstate.C.OUTPUTSELECT
reset => reg_fstate.D.OUTPUTSELECT
reset => data_sel.OUTPUTSELECT
reset => tx_load.OUTPUTSELECT
reset => fifo_rx_read_rq.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => csa_old.IN1
reset => csa_changes[1].IN1
tx_almost_full => Selector2.IN1
tx_almost_full => Selector3.IN1
data_sel <= data_sel.DB_MAX_OUTPUT_PORT_TYPE
tx_load <= tx_load.DB_MAX_OUTPUT_PORT_TYPE
fifo_rx_read_rq <= fifo_rx_read_rq.DB_MAX_OUTPUT_PORT_TYPE
CS <= CS.DB_MAX_OUTPUT_PORT_TYPE


|proyecto2|mux_sel:U5
addr[0] => tmp_data.DATAA
addr[1] => tmp_data.DATAA
addr[2] => tmp_data.DATAA
addr[3] => tmp_data.DATAA
addr[4] => tmp_data.DATAA
addr[5] => tmp_data.DATAA
addr[6] => tmp_data.DATAA
addr[7] => tmp_data.DATAA
data[0] => tmp_data.DATAB
data[1] => tmp_data.DATAB
data[2] => tmp_data.DATAB
data[3] => tmp_data.DATAB
data[4] => tmp_data.DATAB
data[5] => tmp_data.DATAB
data[6] => tmp_data.DATAB
data[7] => tmp_data.DATAB
data_out[0] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= tmp_data.DB_MAX_OUTPUT_PORT_TYPE
sel => tmp_data.OUTPUTSELECT
sel => tmp_data.OUTPUTSELECT
sel => tmp_data.OUTPUTSELECT
sel => tmp_data.OUTPUTSELECT
sel => tmp_data.OUTPUTSELECT
sel => tmp_data.OUTPUTSELECT
sel => tmp_data.OUTPUTSELECT
sel => tmp_data.OUTPUTSELECT


|proyecto2|clk_div_mod:U4
clk => div_cont[0].CLK
clk => div_cont[1].CLK
clk => div_cont[2].CLK
clk => div_cont[3].CLK
clk => div_cont[4].CLK
clk => div_cont[5].CLK
clk => div_cont[6].CLK
clk => div_cont[7].CLK
clk => div_cont[8].CLK
clk => div_cont[9].CLK
clk => div_cont[10].CLK
clk => div_cont[11].CLK
clk => csi_clk~reg0.CLK
csi_clk <= csi_clk~reg0.DB_MAX_OUTPUT_PORT_TYPE
rst => csi_clk.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT
rst => div_cont.OUTPUTSELECT


|proyecto2|shift_register:U3
rst => current_data.OUTPUTSELECT
rst => current_data.OUTPUTSELECT
rst => current_data.OUTPUTSELECT
rst => current_data.OUTPUTSELECT
rst => current_data.OUTPUTSELECT
rst => current_data.OUTPUTSELECT
rst => current_data.OUTPUTSELECT
rst => current_data.OUTPUTSELECT
rst => data_out.IN0
clk => data_out~reg0.CLK
clk => data_out~en.CLK
clk => current_data[0].CLK
clk => current_data[1].CLK
clk => current_data[2].CLK
clk => current_data[3].CLK
clk => current_data[4].CLK
clk => current_data[5].CLK
clk => current_data[6].CLK
clk => current_data[7].CLK
data_in[0] => current_data.DATAB
data_in[1] => current_data.DATAB
data_in[2] => current_data.DATAB
data_in[3] => current_data.DATAB
data_in[4] => current_data.DATAB
data_in[5] => current_data.DATAB
data_in[6] => current_data.DATAB
data_in[7] => current_data.DATAB
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => data_out.IN1
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => current_data.OUTPUTSELECT
load => data_out.IN1
load => data_out.OUTPUTSELECT
load => data_out~en.DATAIN
data_out <= data_out.DB_MAX_OUTPUT_PORT_TYPE


