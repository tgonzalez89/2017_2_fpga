module shift_register (enable,rst,clk,data_in, req_data, data_out,empty);

	input enable, req_data, rst, clk;
	
	input [7:0] data_in;
	output reg data_out, empty;
	reg [7:0] current_data;
	reg [3:0] cont;
	reg [11:0] div_cont;
	reg csi_clk;
	
	
	always @(posedge clk) begin
		if(rst) begin
			div_cont <= 0;
			csi_clk <= 0;
		end
		
		if(div_cont == 12'h512) begin
			csi_clk <= ~csi_clk;
			div_cont <= 0;
		end
		
		div_cont <= div_cont + 1;
		
	end
	
	always @(posedge csi_clk) begin
		if(rst) begin
			current_data <= 8'h0;
			cont <= 3'h0;
			data_out <= 1'hz;
		end
		
		if(enable) begin
			current_data <= data_in;
			cont <= 1;
		end

		if(req_data) begin			
			if(cont != 4'h0) begin
				data_out <= current_data[0];
				current_data <= current_data >> 1;
				empty <= 0;
				cont <= cont + 1;
			end 

			if(cont == 4'h9) begin
				cont <= 0;
				data_out <= 1'hz;
				empty <= 1;
			end
		end

		

	end

endmodule
